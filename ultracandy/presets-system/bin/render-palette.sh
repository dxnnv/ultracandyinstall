#!/usr/bin/env bash
set -euo pipefail

PALETTE="" ; HYPR="" ; WAYBAR="" ; SWAYNC="" ; KITTY="" ; ROFI=""
while [[ $# -gt 0 ]]; do
  case "$1" in
    --palette) PALETTE="$2"; shift 2 ;;
    --hypr)    HYPR="$2"; shift 2 ;;
    --waybar)  WAYBAR="$2"; shift 2 ;;
    --swaync)  SWAYNC="$2"; shift 2 ;;
    --kitty)   KITTY="$2"; shift 2 ;;
    --rofi)    ROFI="$2"; shift 2 ;;
    -h|--help) echo "Usage: $(basename "$0") --palette palette.toml --hypr FILE --waybar FILE --swaync FILE --kitty FILE --rofi FILE"; exit 0 ;;
    *) shift ;;
  esac
done
[[ -f "${PALETTE}" ]] || { echo "Missing palette: ${PALETTE}" >&2; exit 1; }

declare -A C
in=0
while IFS= read -r line; do
  [[ "$line" =~ ^[[:space:]]*# ]] && continue
  if [[ "$line" =~ ^[[:space:]]*\[colors\][[:space:]]*$ ]]; then in=1; continue; fi
  [[ $in -eq 1 ]] || continue
  if [[ "$line" =~ ^[[:space:]]*([A-Za-z0-9_]+)[[:space:]]*=[[:space:]]*\"(#[A-Fa-f0-9]{6,8})\"[[:space:]]*$ ]]; then
    C["${BASH_REMATCH[1]}"]="${BASH_REMATCH[2]}"
  fi
done < "${PALETTE}"

get() { local k="$1" d="${2:-#888888}"; echo "${C[$k]:-$d}"; }
to_rgba() { local h="${1#\#}"; [[ ${#h} -eq 6 ]] && h="${h}ff"; echo "rgba(${h})"; }

mkdir -p "$(dirname "${HYPR}")" "$(dirname "${WAYBAR}")" "$(dirname "${SWAYNC}")" "$(dirname "${KITTY}")" "$(dirname "${ROFI}")"

# Hypr
{
  for key in background error error_container inverse_on_surface inverse_primary inverse_surface on_background on_error on_error_container on_primary on_primary_container on_primary_fixed on_primary_fixed_variant on_secondary on_secondary_container on_surface on_surface_variant on_tertiary on_tertiary_container outline outline_variant primary primary_container primary_fixed_dim scrim secondary secondary_container secondary_fixed_dim shadow surface surface_bright surface_container surface_container_high surface_container_highest surface_container_low surface_container_lowest surface_dim surface_variant tertiary tertiary_container
  do
    echo "\$${key} = $(to_rgba "$(get "$key" "#777777")")"
  done
} > "${HYPR}"

# Waybar
{
  echo "/* Generated by UltraCandy Presets */"
  for k in "${!C[@]}"; do
    echo "@define-color ${k} ${C[$k]};"
  done
} > "${WAYBAR}"

# swaync
{
  echo "/* Generated by UltraCandy Presets */"
  echo ":root {"
  for k in "${!C[@]}"; do
    echo "  --${k}: ${C[$k]};"
  done
  echo "}"
} > "${SWAYNC}"

# kitty
{
  echo "cursor $(get primary_fixed_dim "#cccccc")"
  echo "cursor_text_color $(get on_surface_variant "#111111")"
  echo "foreground            $(get primary_fixed_dim "#d0d0d0")"
  echo "background            $(get on_primary "#101010")"
  echo "selection_foreground  $(get on_secondary "#111111")"
  echo "selection_background  $(get secondary_fixed_dim "#cccccc")"
  echo "url_color             $(get primary "#88aaff")"
  echo "color0 $(get on_primary "#101010")"
  echo "color1 $(get inverse_surface "#444444")"
  echo "color2 $(get inverse_primary "#888888")"
  echo "color3 $(get primary "#88aaff")"
  echo "color4 $(get primary_container "#aac0ff")"
  echo "color5 $(get on_surface "#eeeeee")"
  echo "color6 $(get inverse_primary "#888888")"
  echo "color7 $(get secondary "#ff88aa")"
  echo "color8 $(get secondary_container "#ffb0c7")"
} > "${KITTY}"

# rofi
{
  echo "/* Generated by UltraCandy Presets */"
  echo "* {"
  for k in "${!C[@]}"; do
    echo "  ${k}: ${C[$k]};"
  done
  echo "}"
} > "${ROFI}"